/*!
 * Masonry PACKAGED v3.0.0
 * Cascading grid layout library
 * http://masonry.desandro.com
 * MIT License
 * by David DeSandro
 */

(function(t) {
  function e(t) {
    if (t) {
      if (typeof n[t] === "string") return t;
      t = t.charAt(0).toUpperCase() + t.slice(1);
      for (var e, o = 0, r = i.length; r > o; o++)
        if (((e = i[o] + t), typeof n[e] === "string")) return e;
    }
  }
  var i = "Webkit Moz ms Ms O".split(" ");
  var n = document.documentElement.style;
  typeof define === "function" && define.amd
    ? define(() => e)
    : (t.getStyleProperty = e);
})(window),
  (function(t) {
    function e(t) {
      const e = parseFloat(t);
      const i = t.indexOf("%") === -1 && !isNaN(e);
      return i && e;
    }
    function i() {
      for (
        var t = {
            width: 0,
            height: 0,
            innerWidth: 0,
            innerHeight: 0,
            outerWidth: 0,
            outerHeight: 0
          },
          e = 0,
          i = s.length;
        i > e;
        e++
      ) {
        const n = s[e];
        t[n] = 0;
      }
      return t;
    }
    function n(t) {
      function n(t) {
        if (
          (typeof t === "string" && (t = document.querySelector(t)),
          t && typeof t === "object" && t.nodeType)
        ) {
          const n = r(t);
          if (n.display === "none") return i();
          const h = {};
          (h.width = t.offsetWidth), (h.height = t.offsetHeight);
          for (
            var p = (h.isBorderBox = !(!a || !n[a] || n[a] !== "border-box")),
              u = 0,
              f = s.length;
            f > u;
            u++
          ) {
            const d = s[u];
            const c = n[d];
            const l = parseFloat(c);
            h[d] = isNaN(l) ? 0 : l;
          }
          const m = h.paddingLeft + h.paddingRight;
          const y = h.paddingTop + h.paddingBottom;
          const g = h.marginLeft + h.marginRight;
          const v = h.marginTop + h.marginBottom;
          const _ = h.borderLeftWidth + h.borderRightWidth;
          const b = h.borderTopWidth + h.borderBottomWidth;
          const L = p && o;
          const E = e(n.width);
          E !== !1 && (h.width = E + (L ? 0 : m + _));
          const I = e(n.height);
          return (
            I !== !1 && (h.height = I + (L ? 0 : y + b)),
            (h.innerWidth = h.width - (m + _)),
            (h.innerHeight = h.height - (y + b)),
            (h.outerWidth = h.width + g),
            (h.outerHeight = h.height + v),
            h
          );
        }
      }
      let o;
      var a = t("boxSizing");
      return (
        (function() {
          if (a) {
            const t = document.createElement("div");
            (t.style.width = "200px"),
              (t.style.padding = "1px 2px 3px 4px"),
              (t.style.borderStyle = "solid"),
              (t.style.borderWidth = "1px 2px 3px 4px"),
              (t.style[a] = "border-box");
            const i = document.body || document.documentElement;
            i.appendChild(t);
            const n = r(t);
            (o = e(n.width) === 200), i.removeChild(t);
          }
        })(),
        n
      );
    }
    const o = document.defaultView;
    var r =
      o && o.getComputedStyle
        ? function(t) {
            return o.getComputedStyle(t, null);
          }
        : function(t) {
            return t.currentStyle;
          };
    var s = [
      "paddingLeft",
      "paddingRight",
      "paddingTop",
      "paddingBottom",
      "marginLeft",
      "marginRight",
      "marginTop",
      "marginBottom",
      "borderLeftWidth",
      "borderRightWidth",
      "borderTopWidth",
      "borderBottomWidth"
    ];
    typeof define === "function" && define.amd
      ? define(["get-style-property"], n)
      : (t.getSize = n(t.getStyleProperty));
  })(window),
  (function(t) {
    const e = document.documentElement;
    let i = function() {};
    e.addEventListener
      ? (i = function(t, e, i) {
          t.addEventListener(e, i, !1);
        })
      : e.attachEvent &&
        (i = function(e, i, n) {
          (e[i + n] = n.handleEvent
            ? function() {
                const e = t.event;
                (e.target = e.target || e.srcElement), n.handleEvent.call(n, e);
              }
            : function() {
                const i = t.event;
                (i.target = i.target || i.srcElement), n.call(e, i);
              }),
            e.attachEvent(`on${i}`, e[i + n]);
        });
    let n = function() {};
    e.removeEventListener
      ? (n = function(t, e, i) {
          t.removeEventListener(e, i, !1);
        })
      : e.detachEvent &&
        (n = function(t, e, i) {
          t.detachEvent(`on${e}`, t[e + i]);
          try {
            delete t[e + i];
          } catch (n) {
            t[e + i] = void 0;
          }
        });
    const o = { bind: i, unbind: n };
    typeof define === "function" && define.amd ? define(o) : (t.eventie = o);
  })(this),
  (function(t) {
    function e(t) {
      typeof t === "function" && (e.isReady ? t() : r.push(t));
    }
    function i(t) {
      const i = t.type === "readystatechange" && o.readyState !== "complete";
      if (!e.isReady && !i) {
        e.isReady = !0;
        for (let n = 0, s = r.length; s > n; n++) {
          const a = r[n];
          a();
        }
      }
    }
    function n(n) {
      return (
        n.bind(o, "DOMContentLoaded", i),
        n.bind(o, "readystatechange", i),
        n.bind(t, "load", i),
        e
      );
    }
    var o = t.document;
    var r = [];
    (e.isReady = !1),
      typeof define === "function" && define.amd
        ? define(["eventie"], n)
        : (t.docReady = n(t.eventie));
  })(this),
  (function(t) {
    function e() {}
    function i(t, e) {
      if (o) return e.indexOf(t);
      for (let i = e.length; i--; ) if (e[i] === t) return i;
      return -1;
    }
    const n = e.prototype;
    var o = Array.prototype.indexOf ? !0 : !1;
    (n._getEvents = function() {
      return this._events || (this._events = {});
    }),
      (n.getListeners = function(t) {
        let e;
        let i;
        const n = this._getEvents();
        if (typeof t === "object") {
          e = {};
          for (i in n) n.hasOwnProperty(i) && t.test(i) && (e[i] = n[i]);
        } else e = n[t] || (n[t] = []);
        return e;
      }),
      (n.getListenersAsObject = function(t) {
        let e;
        const i = this.getListeners(t);
        return i instanceof Array && ((e = {}), (e[t] = i)), e || i;
      }),
      (n.addListener = function(t, e) {
        let n;
        const o = this.getListenersAsObject(t);
        for (n in o) o.hasOwnProperty(n) && i(e, o[n]) === -1 && o[n].push(e);
        return this;
      }),
      (n.on = n.addListener),
      (n.defineEvent = function(t) {
        return this.getListeners(t), this;
      }),
      (n.defineEvents = function(t) {
        for (let e = 0; t.length > e; e += 1) this.defineEvent(t[e]);
        return this;
      }),
      (n.removeListener = function(t, e) {
        let n;
        let o;
        const r = this.getListenersAsObject(t);
        for (o in r) {
          r.hasOwnProperty(o) &&
            ((n = i(e, r[o])), n !== -1 && r[o].splice(n, 1));
        }
        return this;
      }),
      (n.off = n.removeListener),
      (n.addListeners = function(t, e) {
        return this.manipulateListeners(!1, t, e);
      }),
      (n.removeListeners = function(t, e) {
        return this.manipulateListeners(!0, t, e);
      }),
      (n.manipulateListeners = function(t, e, i) {
        let n;
        let o;
        const r = t ? this.removeListener : this.addListener;
        const s = t ? this.removeListeners : this.addListeners;
        if (typeof e !== "object" || e instanceof RegExp)
          for (n = i.length; n--; ) r.call(this, e, i[n]);
        else {
          for (n in e) {
            e.hasOwnProperty(n) &&
              (o = e[n]) &&
              (typeof o === "function"
                ? r.call(this, n, o)
                : s.call(this, n, o));
          }
        }
        return this;
      }),
      (n.removeEvent = function(t) {
        let e;
        const i = typeof t;
        const n = this._getEvents();
        if (i === "string") delete n[t];
        else if (i === "object")
          for (e in n) n.hasOwnProperty(e) && t.test(e) && delete n[e];
        else delete this._events;
        return this;
      }),
      (n.emitEvent = function(t, e) {
        let i;
        let n;
        let o;
        const r = this.getListenersAsObject(t);
        for (n in r) {
          if (r.hasOwnProperty(n)) {
            for (i = r[n].length; i--; ) {
              (o = e ? r[n][i].apply(null, e) : r[n][i]()),
                o === !0 && this.removeListener(t, r[n][i]);
            }
          }
        }
        return this;
      }),
      (n.trigger = n.emitEvent),
      (n.emit = function(t) {
        const e = Array.prototype.slice.call(arguments, 1);
        return this.emitEvent(t, e);
      }),
      typeof define === "function" && define.amd
        ? define(() => e)
        : (t.EventEmitter = e);
  })(this),
  (function(t) {
    function e() {}
    function i(t) {
      function i(e) {
        e.prototype.option ||
          (e.prototype.option = function(e) {
            t.isPlainObject(e) &&
              (this.options = t.extend(!0, this.options, e));
          });
      }
      function o(e, i) {
        t.fn[e] = function(o) {
          if (typeof o === "string") {
            for (
              let s = n.call(arguments, 1), a = 0, h = this.length;
              h > a;
              a++
            ) {
              const p = this[a];
              const u = t.data(p, e);
              if (u) {
                if (t.isFunction(u[o]) && o.charAt(0) !== "_") {
                  const f = u[o].apply(u, s);
                  if (void 0 !== f) return f;
                } else r(`no such method '${o}' for ${e} instance`);
              } else {
                r(
                  `cannot call methods on ${e} prior to initialization; ` +
                    `attempted to call '${o}'`
                );
              }
            }
            return this;
          }
          return this.each(function() {
            let n = t.data(this, e);
            n
              ? (n.option(o), n._init())
              : ((n = new i(this, o)), t.data(this, e, n));
          });
        };
      }
      if (t) {
        var r =
          typeof console === "undefined"
            ? e
            : function(t) {
                console.error(t);
              };
        t.bridget = function(t, e) {
          i(e), o(t, e);
        };
      }
    }
    var n = Array.prototype.slice;
    typeof define === "function" && define.amd
      ? define(["jquery"], i)
      : i(t.jQuery);
  })(window),
  (function(t, e) {
    function i(t, e) {
      return t[a](e);
    }
    function n(t) {
      if (!t.parentNode) {
        const e = document.createDocumentFragment();
        e.appendChild(t);
      }
    }
    function o(t, e) {
      n(t);
      for (
        let i = t.parentNode.querySelectorAll(e), o = 0, r = i.length;
        r > o;
        o++
      )
        if (i[o] === t) return !0;
      return !1;
    }
    function r(t, e) {
      return n(t), i(t, e);
    }
    let s;
    var a = (function() {
      if (e.matchesSelector) return "matchesSelector";
      for (
        let t = ["webkit", "moz", "ms", "o"], i = 0, n = t.length;
        n > i;
        i++
      ) {
        const o = t[i];
        const r = `${o}MatchesSelector`;
        if (e[r]) return r;
      }
    })();
    if (a) {
      const h = document.createElement("div");
      const p = i(h, "div");
      s = p ? i : r;
    } else s = o;
    typeof define === "function" && define.amd
      ? define(() => s)
      : (window.matchesSelector = s);
  })(this, Element.prototype),
  (function(t) {
    function e(t, e) {
      for (const i in e) t[i] = e[i];
      return t;
    }
    function i(t, e) {
      t &&
        ((this.element = t),
        (this.layout = e),
        (this.position = { x: 0, y: 0 }),
        this._create());
    }
    const n = t.getSize;
    const o = t.getStyleProperty;
    const r = t.EventEmitter;
    const s = document.defaultView;
    const a =
      s && s.getComputedStyle
        ? function(t) {
            return s.getComputedStyle(t, null);
          }
        : function(t) {
            return t.currentStyle;
          };
    const h = o("transition");
    const p = o("transform");
    const u = h && p;
    const f = !!o("perspective");
    const d = {
      WebkitTransition: "webkitTransitionEnd",
      MozTransition: "transitionend",
      OTransition: "otransitionend",
      transition: "transitionend"
    }[h];
    const c = [
      "transform",
      "transition",
      "transitionDuration",
      "transitionProperty"
    ];
    const l = (function() {
      for (var t = {}, e = 0, i = c.length; i > e; e++) {
        const n = c[e];
        const r = o(n);
        r && r !== n && (t[n] = r);
      }
      return t;
    })();
    e(i.prototype, r.prototype),
      (i.prototype._create = function() {
        this.css({ position: "absolute" });
      }),
      (i.prototype.handleEvent = function(t) {
        const e = `on${t.type}`;
        this[e] && this[e](t);
      }),
      (i.prototype.getSize = function() {
        this.size = n(this.element);
      }),
      (i.prototype.css = function(t) {
        const e = this.element.style;
        for (const i in t) {
          const n = l[i] || i;
          e[n] = t[i];
        }
      }),
      (i.prototype.getPosition = function() {
        const t = a(this.element);
        const e = this.layout.options;
        const i = e.isOriginLeft;
        const n = e.isOriginTop;
        let o = parseInt(t[i ? "left" : "right"], 10);
        let r = parseInt(t[n ? "top" : "bottom"], 10);
        (o = isNaN(o) ? 0 : o), (r = isNaN(r) ? 0 : r);
        const s = this.layout.size;
        (o -= i ? s.paddingLeft : s.paddingRight),
          (r -= n ? s.paddingTop : s.paddingBottom),
          (this.position.x = o),
          (this.position.y = r);
      }),
      (i.prototype.layoutPosition = function() {
        const t = this.layout.size;
        const e = this.layout.options;
        const i = {};
        e.isOriginLeft
          ? ((i.left = `${this.position.x + t.paddingLeft}px`), (i.right = ""))
          : ((i.right = `${this.position.x + t.paddingRight}px`),
            (i.left = "")),
          e.isOriginTop
            ? ((i.top = `${this.position.y + t.paddingTop}px`), (i.bottom = ""))
            : ((i.bottom = `${this.position.y + t.paddingBottom}px`),
              (i.top = "")),
          this.css(i),
          this.emitEvent("layout", [this]);
      });
    const m = f
      ? function(t, e) {
          return `translate3d(${t}px, ${e}px, 0)`;
        }
      : function(t, e) {
          return `translate(${t}px, ${e}px)`;
        };
    (i.prototype._transitionTo = function(t, e) {
      this.getPosition();
      const i = this.position.x;
      const n = this.position.y;
      const o = parseInt(t, 10);
      const r = parseInt(e, 10);
      const s = o === this.position.x && r === this.position.y;
      if ((this.setPosition(t, e), s && !this.isTransitioning))
        return this.layoutPosition(), void 0;
      let a = t - i;
      let h = e - n;
      const p = {};
      const u = this.layout.options;
      (a = u.isOriginLeft ? a : -a),
        (h = u.isOriginTop ? h : -h),
        (p.transform = m(a, h)),
        this.transition({
          to: p,
          onTransitionEnd: this.layoutPosition,
          isCleaning: !0
        });
    }),
      (i.prototype.goTo = function(t, e) {
        this.setPosition(t, e), this.layoutPosition();
      }),
      (i.prototype.moveTo = u ? i.prototype._transitionTo : i.prototype.goTo),
      (i.prototype.setPosition = function(t, e) {
        (this.position.x = parseInt(t, 10)),
          (this.position.y = parseInt(e, 10));
      }),
      (i.prototype._nonTransition = function(t) {
        this.css(t.to),
          t.isCleaning && this._removeStyles(t.to),
          t.onTransitionEnd && t.onTransitionEnd.call(this);
      }),
      (i.prototype._transition = function(t) {
        const e = this.layout.options.transitionDuration;
        if (!parseFloat(e)) return this._nonTransition(t), void 0;
        const i = t.to;
        const n = [];
        for (const o in i) n.push(o);
        const r = {};
        if (
          ((r.transitionProperty = n.join(",")),
          (r.transitionDuration = e),
          this.element.addEventListener(d, this, !1),
          (t.isCleaning || t.onTransitionEnd) &&
            this.on(
              "transitionEnd",
              e => (
                t.isCleaning && e._removeStyles(i),
                t.onTransitionEnd && t.onTransitionEnd.call(e),
                !0
              )
            ),
          t.from)
        ) {
          this.css(t.from);
          let s = this.element.offsetHeight;
          s = null;
        }
        this.css(r), this.css(i), (this.isTransitioning = !0);
      }),
      (i.prototype.transition =
        i.prototype[h ? "_transition" : "_nonTransition"]),
      (i.prototype.onwebkitTransitionEnd = function(t) {
        this.ontransitionend(t);
      }),
      (i.prototype.onotransitionend = function(t) {
        this.ontransitionend(t);
      }),
      (i.prototype.ontransitionend = function(t) {
        t.target === this.element &&
          (this.removeTransitionStyles(),
          this.element.removeEventListener(d, this, !1),
          (this.isTransitioning = !1),
          this.emitEvent("transitionEnd", [this]));
      }),
      (i.prototype._removeStyles = function(t) {
        const e = {};
        for (const i in t) e[i] = "";
        this.css(e);
      });
    const y = { transitionProperty: "", transitionDuration: "" };
    (i.prototype.removeTransitionStyles = function() {
      this.css(y);
    }),
      (i.prototype.removeElem = function() {
        this.element.parentNode.removeChild(this.element),
          this.emitEvent("remove", [this]);
      }),
      (i.prototype.remove = h
        ? function() {
            const t = this;
            this.on("transitionEnd", () => t.removeElem(), !0), this.hide();
          }
        : i.prototype.removeElem),
      (i.prototype.reveal = function() {
        this.css({ display: "" });
        const t = this.layout.options;
        this.transition({
          from: t.hiddenStyle,
          to: t.visibleStyle,
          isCleaning: !0
        });
      }),
      (i.prototype.hide = function() {
        this.css({ display: "" });
        const t = this.layout.options;
        this.transition({
          from: t.visibleStyle,
          to: t.hiddenStyle,
          isCleaning: !0,
          onTransitionEnd() {
            this.css({ display: "none" });
          }
        });
      }),
      (i.prototype.destroy = function() {
        this.css({
          position: "",
          left: "",
          right: "",
          top: "",
          bottom: "",
          transition: "",
          transform: ""
        });
      }),
      (t.Outlayer = { Item: i });
  })(window),
  (function(t) {
    function e(t, e) {
      for (const i in e) t[i] = e[i];
      return t;
    }
    function i(t) {
      return v.call(t) === "[object Array]";
    }
    function n(t) {
      let e = [];
      if (i(t)) e = t;
      else if (typeof t.length === "number")
        for (let n = 0, o = t.length; o > n; n++) e.push(t[n]);
      else e.push(t);
      return e;
    }
    function o(t) {
      return t.replace(/(.)([A-Z])/g, (t, e, i) => `${e}-${i}`).toLowerCase();
    }
    function r(t, i) {
      if ((typeof t === "string" && (t = l.querySelector(t)), !t || !_(t))) {
        return (
          m && m.error(`Bad ${this.settings.namespace} element: ${t}`), void 0
        );
      }
      (this.element = t),
        (this.options = e({}, this.options)),
        e(this.options, i);
      const n = ++L;
      (this.element.outlayerGUID = n),
        (E[n] = this),
        this._create(),
        this.options.isInitLayout && this.layout();
    }
    function s(t, i) {
      t.prototype[i] = e({}, r.prototype[i]);
    }
    const a = t.Outlayer;
    const h = a.Item;
    const p = t.docReady;
    const u = t.EventEmitter;
    const f = t.eventie;
    const d = t.getSize;
    const c = t.matchesSelector;
    var l = t.document;
    var m = t.console;
    const y = t.jQuery;
    const g = function() {};
    var v = Object.prototype.toString;
    var _ =
      typeof HTMLElement === "object"
        ? function(t) {
            return t instanceof HTMLElement;
          }
        : function(t) {
            return (
              t &&
              typeof t === "object" &&
              t.nodeType === 1 &&
              typeof t.nodeName === "string"
            );
          };
    const b = Array.prototype.indexOf
      ? function(t, e) {
          return t.indexOf(e);
        }
      : function(t, e) {
          for (let i = 0, n = t.length; n > i; i++) if (t[i] === e) return i;
          return -1;
        };
    var L = 0;
    var E = {};
    (r.prototype.settings = { namespace: "outlayer", item: a.Item }),
      (r.prototype.options = {
        containerStyle: { position: "relative" },
        isInitLayout: !0,
        isOriginLeft: !0,
        isOriginTop: !0,
        isResizeBound: !0,
        transitionDuration: "0.4s",
        hiddenStyle: { opacity: 0, transform: "scale(0.001)" },
        visibleStyle: { opacity: 1, transform: "scale(1)" }
      }),
      e(r.prototype, u.prototype),
      (r.prototype._create = function() {
        this.reloadItems(),
          (this.stamps = []),
          this.stamp(this.options.stamp),
          e(this.element.style, this.options.containerStyle),
          this.options.isResizeBound && this.bindResize();
      }),
      (r.prototype.reloadItems = function() {
        this.items = this._getItems(this.element.children);
      }),
      (r.prototype._getItems = function(t) {
        for (
          var e = this._filterFindItemElements(t),
            i = this.settings.item,
            n = [],
            o = 0,
            r = e.length;
          r > o;
          o++
        ) {
          const s = e[o];
          const a = new i(s, this, this.options.itemOptions);
          n.push(a);
        }
        return n;
      }),
      (r.prototype._filterFindItemElements = function(t) {
        t = n(t);
        const e = this.options.itemSelector;
        if (!e) return t;
        for (var i = [], o = 0, r = t.length; r > o; o++) {
          const s = t[o];
          c(s, e) && i.push(s);
          for (let a = s.querySelectorAll(e), h = 0, p = a.length; p > h; h++)
            i.push(a[h]);
        }
        return i;
      }),
      (r.prototype.getItemElements = function() {
        for (var t = [], e = 0, i = this.items.length; i > e; e++)
          t.push(this.items[e].element);
        return t;
      }),
      (r.prototype.layout = function() {
        this._resetLayout(), this._manageStamps();
        const t =
          void 0 !== this.options.isLayoutInstant
            ? this.options.isLayoutInstant
            : !this._isLayoutInited;
        this.layoutItems(this.items, t), (this._isLayoutInited = !0);
      }),
      (r.prototype._init = r.prototype.layout),
      (r.prototype._resetLayout = function() {
        this.getSize();
      }),
      (r.prototype.getSize = function() {
        this.size = d(this.element);
      }),
      (r.prototype._getMeasurement = function(t, e) {
        let i;
        const n = this.options[t];
        n
          ? (typeof n === "string"
              ? (i = this.element.querySelector(n))
              : _(n) && (i = n),
            (this[t] = i ? d(i)[e] : n))
          : (this[t] = 0);
      }),
      (r.prototype.layoutItems = function(t, e) {
        (t = this._getItemsForLayout(t)),
          this._layoutItems(t, e),
          this._postLayout();
      }),
      (r.prototype._getItemsForLayout = function(t) {
        for (var e = [], i = 0, n = t.length; n > i; i++) {
          const o = t[i];
          o.isIgnored || e.push(o);
        }
        return e;
      }),
      (r.prototype._layoutItems = function(t, e) {
        if (!t || !t.length)
          return this.emitEvent("layoutComplete", [this, t]), void 0;
        this._itemsOn(t, "layout", function() {
          this.emitEvent("layoutComplete", [this, t]);
        });
        for (var i = [], n = 0, o = t.length; o > n; n++) {
          const r = t[n];
          const s = this._getItemLayoutPosition(r);
          (s.item = r), (s.isInstant = e), i.push(s);
        }
        this._processLayoutQueue(i);
      }),
      (r.prototype._getItemLayoutPosition = function() {
        return { x: 0, y: 0 };
      }),
      (r.prototype._processLayoutQueue = function(t) {
        for (let e = 0, i = t.length; i > e; e++) {
          const n = t[e];
          this._positionItem(n.item, n.x, n.y, n.isInstant);
        }
      }),
      (r.prototype._positionItem = function(t, e, i, n) {
        n ? t.goTo(e, i) : t.moveTo(e, i);
      }),
      (r.prototype._postLayout = function() {
        const t = this._getContainerSize();
        t &&
          (this._setContainerMeasure(t.width, !0),
          this._setContainerMeasure(t.height, !1));
      }),
      (r.prototype._getContainerSize = g),
      (r.prototype._setContainerMeasure = function(t, e) {
        if (void 0 !== t) {
          const i = this.size;
          i.isBorderBox &&
            (t += e
              ? i.paddingLeft +
                i.paddingRight +
                i.borderLeftWidth +
                i.borderRightWidth
              : i.paddingBottom +
                i.paddingTop +
                i.borderTopWidth +
                i.borderBottomWidth),
            (t = Math.max(t, 0)),
            (this.element.style[e ? "width" : "height"] = `${t}px`);
        }
      }),
      (r.prototype._itemsOn = function(t, e, i) {
        function n() {
          return o++, o === r && i.call(s), !0;
        }
        for (
          var o = 0, r = t.length, s = this, a = 0, h = t.length;
          h > a;
          a++
        ) {
          const p = t[a];
          p.on(e, n);
        }
      }),
      (r.prototype.ignore = function(t) {
        const e = this.getItem(t);
        e && (e.isIgnored = !0);
      }),
      (r.prototype.unignore = function(t) {
        const e = this.getItem(t);
        e && delete e.isIgnored;
      }),
      (r.prototype.stamp = function(t) {
        if ((t = this._find(t))) {
          this.stamps = this.stamps.concat(t);
          for (let e = 0, i = t.length; i > e; e++) {
            const n = t[e];
            this.ignore(n);
          }
        }
      }),
      (r.prototype.unstamp = function(t) {
        if ((t = this._find(t))) {
          for (let e = 0, i = t.length; i > e; e++) {
            const n = t[e];
            const o = b(this.stamps, n);
            o !== -1 && this.stamps.splice(o, 1), this.unignore(n);
          }
        }
      }),
      (r.prototype._find = function(t) {
        return t
          ? (typeof t === "string" && (t = this.element.querySelectorAll(t)),
            (t = n(t)))
          : void 0;
      }),
      (r.prototype._manageStamps = function() {
        if (this.stamps && this.stamps.length) {
          this._getBoundingRect();
          for (let t = 0, e = this.stamps.length; e > t; t++) {
            const i = this.stamps[t];
            this._manageStamp(i);
          }
        }
      }),
      (r.prototype._getBoundingRect = function() {
        const t = this.element.getBoundingClientRect();
        const e = this.size;
        this._boundingRect = {
          left: t.left + e.paddingLeft + e.borderLeftWidth,
          top: t.top + e.paddingTop + e.borderTopWidth,
          right: t.right - (e.paddingRight + e.borderRightWidth),
          bottom: t.bottom - (e.paddingBottom + e.borderBottomWidth)
        };
      }),
      (r.prototype._manageStamp = g),
      (r.prototype._getElementOffset = function(t) {
        const e = t.getBoundingClientRect();
        const i = this._boundingRect;
        const n = d(t);
        const o = {
          left: e.left - i.left - n.marginLeft,
          top: e.top - i.top - n.marginTop,
          right: i.right - e.right - n.marginRight,
          bottom: i.bottom - e.bottom - n.marginBottom
        };
        return o;
      }),
      (r.prototype.handleEvent = function(t) {
        const e = `on${t.type}`;
        this[e] && this[e](t);
      }),
      (r.prototype.bindResize = function() {
        this.isResizeBound ||
          (f.bind(t, "resize", this), (this.isResizeBound = !0));
      }),
      (r.prototype.unbindResize = function() {
        f.unbind(t, "resize", this), (this.isResizeBound = !1);
      }),
      (r.prototype.onresize = function() {
        function t() {
          e.resize();
        }
        this.resizeTimeout && clearTimeout(this.resizeTimeout);
        var e = this;
        this.resizeTimeout = setTimeout(t, 100);
      }),
      (r.prototype.resize = function() {
        const t = d(this.element);
        const e = this.size && t;
        (e && t.innerWidth === this.size.innerWidth) ||
          (this.layout(), delete this.resizeTimeout);
      }),
      (r.prototype.addItems = function(t) {
        const e = this._getItems(t);
        if (e.length) return (this.items = this.items.concat(e)), e;
      }),
      (r.prototype.appended = function(t) {
        const e = this.addItems(t);
        e.length && (this.layoutItems(e, !0), this.reveal(e));
      }),
      (r.prototype.prepended = function(t) {
        const e = this._getItems(t);
        if (e.length) {
          const i = this.items.slice(0);
          (this.items = e.concat(i)),
            this._resetLayout(),
            this.layoutItems(e, !0),
            this.reveal(e),
            this.layoutItems(i);
        }
      }),
      (r.prototype.reveal = function(t) {
        if (t && t.length) {
          for (let e = 0, i = t.length; i > e; e++) {
            const n = t[e];
            n.reveal();
          }
        }
      }),
      (r.prototype.hide = function(t) {
        if (t && t.length) {
          for (let e = 0, i = t.length; i > e; e++) {
            const n = t[e];
            n.hide();
          }
        }
      }),
      (r.prototype.getItem = function(t) {
        for (let e = 0, i = this.items.length; i > e; e++) {
          const n = this.items[e];
          if (n.element === t) return n;
        }
      }),
      (r.prototype.getItems = function(t) {
        if (t && t.length) {
          for (var e = [], i = 0, n = t.length; n > i; i++) {
            const o = t[i];
            const r = this.getItem(o);
            r && e.push(r);
          }
          return e;
        }
      }),
      (r.prototype.remove = function(t) {
        t = n(t);
        const e = this.getItems(t);
        this._itemsOn(e, "remove", function() {
          this.emitEvent("removeComplete", [this, e]);
        });
        for (let i = 0, o = e.length; o > i; i++) {
          const r = e[i];
          r.remove();
          const s = b(this.items, r);
          this.items.splice(s, 1);
        }
      }),
      (r.prototype.destroy = function() {
        const t = this.element.style;
        (t.height = ""), (t.position = ""), (t.width = "");
        for (let e = 0, i = this.items.length; i > e; e++) {
          const n = this.items[e];
          n.destroy();
        }
        this.unbindResize(), delete this.element.outlayerGUID;
      }),
      (r.data = function(t) {
        const e = t && t.outlayerGUID;
        return e && E[e];
      }),
      (r.create = function(t, i) {
        function n() {
          r.apply(this, arguments);
        }
        return (
          e(n.prototype, r.prototype),
          s(n, "options"),
          s(n, "settings"),
          e(n.prototype.options, i),
          (n.prototype.settings.namespace = t),
          (n.data = r.data),
          (n.Item = function() {
            h.apply(this, arguments);
          }),
          (n.Item.prototype = new r.Item()),
          (n.prototype.settings.item = n.Item),
          p(() => {
            for (
              let e = o(t),
                i = l.querySelectorAll(`.js-${e}`),
                r = `data-${e}-options`,
                s = 0,
                a = i.length;
              a > s;
              s++
            ) {
              var h;
              const p = i[s];
              const u = p.getAttribute(r);
              try {
                h = u && JSON.parse(u);
              } catch (f) {
                m &&
                  m.error(
                    `Error parsing ${r} on ${p.nodeName.toLowerCase()}${
                      p.id ? `#${p.id}` : ""
                    }: ${f}`
                  );
                continue;
              }
              const d = new n(p, h);
              y && y.data(p, t, d);
            }
          }),
          y && y.bridget && y.bridget(t, n),
          n
        );
      }),
      (r.Item = h),
      (t.Outlayer = r);
  })(window),
  (function(t) {
    function e(t, e) {
      const n = t.create("masonry");
      return (
        (n.prototype._resetLayout = function() {
          this.getSize(),
            this._getMeasurement("columnWidth", "outerWidth"),
            this._getMeasurement("gutter", "outerWidth"),
            this.measureColumns();
          let t = this.cols;
          for (this.colYs = []; t--; ) this.colYs.push(0);
          this.maxY = 0;
        }),
        (n.prototype.measureColumns = function() {
          const t = this.items[0].element;
          (this.columnWidth = this.columnWidth || e(t).outerWidth),
            (this.columnWidth += this.gutter),
            (this.cols = Math.floor(
              (this.size.innerWidth + this.gutter) / this.columnWidth
            )),
            (this.cols = Math.max(this.cols, 1));
        }),
        (n.prototype._getItemLayoutPosition = function(t) {
          t.getSize();
          let e = Math.ceil(t.size.outerWidth / this.columnWidth);
          e = Math.min(e, this.cols);
          for (
            var n = this._getColGroup(e),
              o = Math.min.apply(Math, n),
              r = i(n, o),
              s = { x: this.columnWidth * r, y: o },
              a = o + t.size.outerHeight,
              h = this.cols + 1 - n.length,
              p = 0;
            h > p;
            p++
          )
            this.colYs[r + p] = a;
          return s;
        }),
        (n.prototype._getColGroup = function(t) {
          if (t === 1) return this.colYs;
          for (var e = [], i = this.cols + 1 - t, n = 0; i > n; n++) {
            const o = this.colYs.slice(n, n + t);
            e[n] = Math.max.apply(Math, o);
          }
          return e;
        }),
        (n.prototype._manageStamp = function(t) {
          const i = e(t);
          const n = this._getElementOffset(t);
          const o = this.options.isOriginLeft ? n.left : n.right;
          const r = o + i.outerWidth;
          let s = Math.floor(o / this.columnWidth);
          s = Math.max(0, s);
          let a = Math.floor(r / this.columnWidth);
          a = Math.min(this.cols - 1, a);
          for (
            let h =
                (this.options.isOriginTop ? n.top : n.bottom) + i.outerHeight,
              p = s;
            a >= p;
            p++
          )
            this.colYs[p] = Math.max(h, this.colYs[p]);
        }),
        (n.prototype._getContainerSize = function() {
          return (
            (this.maxY = Math.max.apply(Math, this.colYs)),
            { height: this.maxY }
          );
        }),
        n
      );
    }
    var i = Array.prototype.indexOf
      ? function(t, e) {
          return t.indexOf(e);
        }
      : function(t, e) {
          for (let i = 0, n = t.length; n > i; i++) {
            const o = t[i];
            if (o === e) return i;
          }
          return -1;
        };
    typeof define === "function" && define.amd
      ? define(["outlayer", "get-size"], e)
      : (t.Masonry = e(t.Outlayer, t.getSize));
  })(window);
